
/*
 * 
 */

package remote.wise.client.ConfigAppService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1-patch-01
 * Mon Jul 15 16:42:01 IST 2013
 * Generated source version: 2.3.1-patch-01
 * 
 */


@WebServiceClient(name = "ConfigAppServiceService", 
                  wsdlLocation = "http://localhost:27000/WISE/ConfigAppService?wsdl",
                  targetNamespace = "http://webservice.service.wise.remote/") 
public class ConfigAppServiceService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://webservice.service.wise.remote/", "ConfigAppServiceService");
    public final static QName ConfigAppServicePort = new QName("http://webservice.service.wise.remote/", "ConfigAppServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:27000/WISE/ConfigAppService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://localhost:27000/WISE/ConfigAppService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ConfigAppServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ConfigAppServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConfigAppServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ConfigAppServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }
    public ConfigAppServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    public ConfigAppServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns ConfigAppService
     */
    @WebEndpoint(name = "ConfigAppServicePort")
    public ConfigAppService getConfigAppServicePort() {
        return super.getPort(ConfigAppServicePort, ConfigAppService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConfigAppService
     */
    @WebEndpoint(name = "ConfigAppServicePort")
    public ConfigAppService getConfigAppServicePort(WebServiceFeature... features) {
        return super.getPort(ConfigAppServicePort, ConfigAppService.class, features);
    }

}
