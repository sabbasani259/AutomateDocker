
/*
 * 
 */

package remote.wise.client.UserAlertPreferenceService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1-patch-01
 * Tue Apr 16 13:53:19 IST 2013
 * Generated source version: 2.3.1-patch-01
 * 
 */


@WebServiceClient(name = "UserAlertPreferenceServiceService", 
                  wsdlLocation = "http://localhost:27000/WISE/UserAlertPreferenceService?wsdl",
                  targetNamespace = "http://webservice.service.wise.remote/") 
public class UserAlertPreferenceServiceService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://webservice.service.wise.remote/", "UserAlertPreferenceServiceService");
    public final static QName UserAlertPreferenceServicePort = new QName("http://webservice.service.wise.remote/", "UserAlertPreferenceServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:27000/WISE/UserAlertPreferenceService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://localhost:27000/WISE/UserAlertPreferenceService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public UserAlertPreferenceServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserAlertPreferenceServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserAlertPreferenceServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public UserAlertPreferenceServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
    }
    public UserAlertPreferenceServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    public UserAlertPreferenceServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns UserAlertPreferenceService
     */
    @WebEndpoint(name = "UserAlertPreferenceServicePort")
    public UserAlertPreferenceService getUserAlertPreferenceServicePort() {
        return super.getPort(UserAlertPreferenceServicePort, UserAlertPreferenceService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserAlertPreferenceService
     */
    @WebEndpoint(name = "UserAlertPreferenceServicePort")
    public UserAlertPreferenceService getUserAlertPreferenceServicePort(WebServiceFeature... features) {
        return super.getPort(UserAlertPreferenceServicePort, UserAlertPreferenceService.class, features);
    }

}
